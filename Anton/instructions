Основная работа минишелла.
1) Получаем строку с помощью readline. <После валидации можем разделить ее на двумерный массив>
2) Необходимо понять что значит первое слово: Редирект, Хердок, Команда.(в нашем случе это команда)
3) Понять что за команда: built-in или башевская.
4) Разбиваем аргументы на двумерный массив. Запускаем команду.

(Это актуально при простых вызовах команд).

Пример: cmd1 args | cmd2 > args_1

Важно понимать: Когда встречается пайп или редирект, то команды никак не изменяются, меняются только потоки ввода или вывода (чтения или записи).
1) Проверка первого слова:
	Если редирект, то после него должен быть файл ('<' - read from file '>' - record to file) ))
	Если хердок ('<<'), то после него должно быть стоп-слово, а после стоп-слова команда.(Эта команда прочтет из fd == 0)
	Если команда, то далее идут аргументы.(Или не идут)) а чо, и такое бывает)

2) После того как мы поняли что за аргумент идет после первого слова мы встречаем пайп или редирект (то есть то, из-за чего мы терминал игнорим и выводим в какой-то дескриптор)
	Это значит, что его надо как-то обозначить.
	<Надо бы еще подумать, в какой момент менять дескрипторы> (можно сразу во время обнаружения, но тут не получится сделать универсально.(( )
														      (или можно передавать все команды с их аргументами обособленно типа: 
															  typedef struct s_cmd{
																  char *util_cmd;//* Утилита
																  char **argv;//* Здесь команда с аргументами или файл
																  char *file;//* Файл если был какой-нибудь редирект
																  short operator;//* Здесь какой-либо оператор : < > << >> |
															  } t_cmd)
															  таким образом легче будет прописать логику для выполнения самой команды.
															  P.S.: Команду подавать строго так, чтобы ее можно было впихнуть в execve(Путь, Название команды и ее флаги, Переменная оркжения)
Нам разрешено использовать одну глобальную переменную. Мы можем заюзать переменную структуры и будем в ней хранить:
									1) Копию env
									2) Локальные переменные
									3) Код возвращаемого значения последней команды
									4) Копию env когда мы добавили туда переменную экспортом
									5) Файловые дескрипторы ввода и вывода терминала чтобы 100 проц их не потерять
